return {
  -- {
  --   "hrsh7th/cmp-nvim-lsp",
  -- },
  -- {
  --   "L3MON4D3/LuaSnip",
  --   dependencies = {
  --     "saadparwaiz1/cmp_luasnip",
  --     "rafamadriz/friendly-snippets",
  --   },
  -- },
  -- {
  --   "hrsh7th/nvim-cmp",
  --   config = function()
  --     local cmp = require "cmp"
  --     local luasnip = require "luasnip"
  --
  --     -- load vscode style snippets
  --     require("luasnip.loaders.from_vscode").lazy_load()
  --
  --     cmp.setup {
  --       snippet = {
  --         expand = function(args) luasnip.lsp_expand(args.body) end,
  --       },
  --       window = {
  --         completion = cmp.config.window.bordered(),
  --         documentation = cmp.config.window.bordered(),
  --       },
  --
  --       mapping = cmp.mapping.preset.insert {
  --         ["<C-s>"] = cmp.mapping.complete(),
  --         ["<C-w>"] = cmp.mapping.abort(),
  --         ["<CR>"] = cmp.mapping(function(fallback)
  --           if cmp.visible() then
  --             if cmp.get_active_entry() then
  --               -- Confirm the selected item if there is an active entry
  --               cmp.confirm { select = false }
  --             else
  --               -- If no entry is selected, insert a new line
  --               fallback()
  --             end
  --           else
  --             -- Default behavior: insert a new line
  --             fallback()
  --           end
  --         end, { "i", "s" }), -- Apply in insert and select modes
  --         ["<Tab>"] = cmp.mapping(function(fallback)
  --           if vim.api.nvim_get_mode().mode ~= "c" and luasnip.expand_or_locally_jumpable() then
  --             luasnip.expand_or_jump()
  --           else
  --             fallback()
  --           end
  --         end, { "i", "s" }),
  --         ["<S-Tab>"] = cmp.mapping(function(fallback)
  --           if vim.api.nvim_get_mode().mode ~= "c" and luasnip.jumpable(-1) then
  --             luasnip.jump(-1)
  --           else
  --             fallback()
  --           end
  --         end, { "i", "s" }),
  --       },
  --       sources = cmp.config.sources({
  --         { name = "nvim_lsp", priority = 1000 },
  --         { name = "luasnip", priority = 750 }, -- For LuaSnip users
  --       }, {
  --         { name = "buffer", priority = 500 },
  --       }),
  --     }
  --   end,
  -- },
}
